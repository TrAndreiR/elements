/* General........................................................ */

:host {
	--ts-box-shadow-color: transparent;
	display: inline-block;
	font-size: var(--ts-font-size-default);
	line-height: var(--ts-unit);

	& > button {
		box-shadow: var(--ts-boxshadow-focus-border) var(--ts-box-shadow-color);
		position: relative;
		min-width: var(--ts-unit-double);
		border: none;
		border-radius: var(--ts-unit-double);
		font-size: var(--ts-font-size-default);
		padding: 0;
	}

	& span {
		display: block;
		padding: var(--ts-unit-half) var(--ts-unit);
		font-weight: var(--ts-fontweight-semibold);
		text-transform: uppercase;
		line-height: var(--ts-unit);
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		white-space: nowrap;
	}
}

:host(:not([busy])) {
	& > button {
		&:hover {
			cursor: pointer;
			background: var(--ts-color-gray-lighter);
		}
	}
}

:host(:not([type])),
:host([type='secondary']) {
	& > button {
		background: var(--ts-color-white);
		box-shadow: var(--ts-boxshadow-border-default);

		&:focus {
			box-shadow: var(--ts-boxshadow-focus-border) var(--ts-color-blue);
		}
	}
}

:host(.no-border) {
	& > button {
		box-shadow: none;
		background: transparent;
		&:focus {
			box-shadow: none;
		}
	}
}

/* Primary type................................................... */

:host([type='primary']) {
	& > button {
		background: var(--ts-color-blue);
		color: var(--ts-color-white);
	}
}

:host(:not([busy])[type='primary']) {
	& > button {
		&:hover {
			background: var(--ts-color-blue-dark);
		}

		&:focus {
			--ts-box-shadow-color: var(--ts-color-blue-darker);
		}
	}
}

/* Accept type................................................... */

:host([type='accept']) {
	& > button {
		background: var(--ts-color-green);
		color: var(--ts-color-white);
	}
}

:host(:not([busy])[type='accept']) {
	& > button {
		&:hover {
			background: var(--ts-color-green-dark);
		}

		&:focus {
			--ts-box-shadow-color: var(--ts-color-green-darker);
		}
	}
}

/* Warning type................................................... */

:host([type='warning']) {
	& > button {
		background: var(--ts-color-orange);
		color: var(--ts-color-white);
	}
}

:host(:not([busy])[type='warning']) {
	& > button {
		&:hover {
			background: var(--ts-color-orange-dark);
		}

		&:focus {
			--ts-box-shadow-color: var(--ts-color-orange-darker);
		}
	}
}

/* Danger type................................................... */

:host([type='danger']) {
	& > button {
		background: var(--ts-color-red);
		color: var(--ts-color-white);
	}
}

:host(:not([busy])[type='danger']) {
	& > button {
		&:hover {
			background: var(--ts-color-red-dark);
		}

		&:focus {
			--ts-box-shadow-color: var(--ts-color-red-darker);
		}
	}
}

/* Text type...................................................... */

:host([type='text']) {
	& > button {
		background: transparent;
		border-radius: var(--ts-radius);
		display: flex;
		align-items: center;
	}

	& span {
		color: var(--ts-color-blue);
		padding: 0 var(--ts-unit-quarter);
		font-weight: var(--ts-fontweight);
		text-transform: none;
		letter-spacing: normal;
	}
}

:host(:not([busy])[type='text']) {
	& > button {
		&:hover {
			background: transparent;
			& span {
				color: var(--ts-color-blue-dark);
			}
		}

		&:focus {
			background: var(--ts-color-blue);
			& span {
				color: var(--ts-color-white);
			}
		}
	}
}

/* Text + icon type (action).....................................................*/

:host([type='text'][icon]) {
	& > button {
		padding-inline-start: var(--ts-unit-half);

		& span {
			color: var(--ts-color-blue-darkest);
			padding: var(--ts-unit-half);
		}
	}
}

:host(:not([busy])[type='text'][icon]) {
	& > button {
		&:hover {
			background: var(--ts-color-gray-lightest);
			& span {
				color: var(--ts-color-blue-darkest);
			}
		}

		&:focus {
			background: var(--ts-color-gray-lightest);
			--ts-box-shadow-color: var(--ts-color-gray);
			& span {
				color: var(--ts-color-blue-darkest);
			}
		}
	}
}

/* Micro size......................................................*/

:host(:not([type='text'])[size='micro']) {
	& > button {
		font-size: var(--ts-fontsize-small);
		border-radius: var(--ts-unit);
		padding: 0 var(--ts-unit-half);
	}

	& span {
		padding: 0 var(--ts-unit-eighth);
		font-size: var(--ts-fontsize-small);
	}
}

/* Inside a ButtonGroup & full-width ...........................................*/

:host([full-width]),
:host([grouped]) {
	display: block;
	text-align: center;

	& > button {
		width: 100%;
		display: block;
	}
}

:host([grouped]) {
	margin-bottom: var(--ts-unit-half);
}

:host([inline]) {
	display: inline-block;

	& > button {
		width: auto;
		display: inline;
	}
}

:host([grouped][type='text']) {
	& > button {
		display: flex;
		justify-content: center;
	}
}

/* Button with an icon ............................................*/

:host(:not([type='text'])[icon]) {
	& > button {
		width: var(--ts-unit-double);
		height: var(--ts-unit-double);
	}

	& ts-icon {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translate(-50%, -50%);
	}

	& span {
		visibility: hidden;
	}
}

/* Disable status .................................................*/

:host([disabled]) {
	cursor: not-allowed;

	& > button {
		pointer-events: none;
		background-color: var(--ts-disabled-background-color);
		box-shadow: none;
	}

	& span {
		color: var(--ts-disabled-color);
	}
}

:host([disabled][type='text']) {
	& > button {
		background-color: transparent;
	}
}

/* Busy status ....................................................*/

:host([busy]) {
	& > :first-child {
		pointer-events: none;
		cursor: default;
		box-shadow: none;
		background-size: var(--ts-unit-double) var(--ts-unit-double);
		background-image: linear-gradient(
			-45deg,
			var(--ts-color-gray-light) 25%,
			var(--ts-color-gray-lightest) 25%,
			var(--ts-color-gray-lightest) 50%,
			var(--ts-color-gray-light) 50%,
			var(--ts-color-gray-light) 75%,
			var(--ts-color-gray-lightest) 75%,
			var(--ts-color-gray-lightest)
		);
		animation: move 1s linear infinite;

		& > * {
			visibility: hidden;
		}
	}
}

@keyframes move {
	0% {
		background-position: 0 0;
	}
	100% {
		background-position: var(--ts-unit-double) var(--ts-unit-double);
	}
}
